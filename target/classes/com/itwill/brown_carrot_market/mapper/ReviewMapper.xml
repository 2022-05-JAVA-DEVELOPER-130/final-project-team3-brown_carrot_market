<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.brown_carrot_market.mapper.ReviewMapper">
<!-- 
	private int review_no;
	private String review_desc;
	private String review_image;
	private double review_point;
	private Orders orders;
	private UserInfo userInfo;
 -->
 	<resultMap id="reviewResultMap" type="com.itwill.brown_carrot_market.dto.Review">
 		<result column="review_no" property="review_no"/>
 		<result column="review_desc" property="review_desc"/>
 		<result column="review_image" property="review_image"/>
 		<result column="review_point" property="review_point"/>
 		<association property="userInfo" javaType="com.itwill.brown_carrot_market.dto.UserInfo">
			<result column="user_id" property="user_id" />
			<result column="user_name" property="user_name" />
			<result column="user_profile" property="user_profile" />
 		</association>
 		<association property="orders" javaType="com.itwill.brown_carrot_market.dto.Orders">
	 		<result column="orders_no" property="orders_no" />
			<result column="user_id" property="user_id" />
	 		<association property="product" javaType="com.itwill.brown_carrot_market.dto.Product">
	 		<result column="p_no" property="p_no" />
	 		<result column="p_address_name" property="p_address_name" />
	 		</association>
 		</association>
 	</resultMap>
 
 
	<insert id="createReview" parameterType="com.itwill.brown_carrot_market.dto.Review" useGeneratedKeys="true">
		<selectKey keyProperty="review_no" order="BEFORE" resultType="int">
			select review_review_no_seq.nextval from dual
		</selectKey>
		insert into review(review_no,review_desc,review_image,review_point,orders_no,user_id)
    		values(#{review_no},#{review_desc},#{review_image},#{review_point}, #{orders.orders_no},#{userInfo.user_id})
	</insert>
	
	<!-- 전체후기 : 판매자 or 구매자가 나에게 남긴 후기 -->
	<select id="findReceivedReview" parameterType="String" resultMap="reviewResultMap">
<!-- 
		select * from review r
		join orders oo
		on r.orders_no=oo.orders_no
			where r.user_id in
				(select o.user_id buyer from product p
					join orders o
					on p.p_no=o.p_no
					where p.user_id = #{user_id})
			or r.user_id in
				(select p.user_id seller from product p
					join orders o
					on p.p_no=o.p_no
					where o.user_id = #{user_id})
 -->
 		select * from review r
			join orders oo
			on r.orders_no=oo.orders_no
			join product pp
			on oo.p_no=pp.p_no
			join userinfo u
			on pp.user_id=u.user_id
			where r.user_id in
				(select o.user_id buyer from product p
				join orders o
				on p.p_no=o.p_no
				where p.user_id = #{user_id})
			or r.user_id in
				(select p.user_id seller from product p
				join orders o
				on p.p_no=o.p_no
				where o.user_id = #{user_id})
	</select>
	
	<!-- 구매자가 남긴 후기: '판매자(carrot3)'인 경우 -->
	<select id="findReceivedReviewByBuyer" parameterType="String" resultMap="reviewResultMap">
		select * from review r
		join orders oo
		on r.orders_no=oo.orders_no
			where r.user_id in
				(select o.user_id buyer from product p
					join orders o
					on p.p_no=o.p_no
					where p.user_id =#{user_id})
	</select>
	
	<!-- 판매자가 남긴 후기: '구매자(carrot1)'인 경우  -->
	<select id="findReceivedReviewBySeller" parameterType="String" resultMap="reviewResultMap">
		select * from review r
		join orders oo
		on r.orders_no=oo.orders_no
			where r.user_id in
				(select p.user_id seller from product p
					join orders o
					on p.p_no=o.p_no
					where o.user_id = #{user_id})
	</select>
	

</mapper>